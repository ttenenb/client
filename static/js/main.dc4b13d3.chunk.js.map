{"version":3,"sources":["Header.js","useForm.js","AddName.js","Edit.js","IndividualContact.js","Contacts.js","Winners.js","Raffles.js","Home.js","WeatherDetail.js","myKey.js","Weather.js","ErrorComponent.js","PageNotFound.js","Loading.js","App.js","reportWebVitals.js","index.js"],"names":["Header","useState","expanded","setExpanded","Navbar","bg","expand","className","src","alt","Toggle","aria-controls","onClick","Collapse","id","to","data-bs-toggle","data-bs-target","useForm","initialFormValues","formValues","setFormValues","e","target","name","value","AddName","displayForm","setContacts","contacts","firstName","lastName","email","values","setValues","onSubmit","preventDefault","valueArray","Object","length","onChange","required","type","Edit","contact","displayEditMode","allContacts","contactKeys","index","keys","map","c","setcontactsRef","useRef","colSpan","current","IndividualContact","editButtons","indexCell","populateCells","Contacts","setLoading","deleted","deleteContact","inEditMode","editContact","individualContact","setIndividualContact","allcontactsRef","useEffect","filter","editRow","Winners","winner","first","last","Raffles","setError","displayAddNameForm","setDisplayAddNameForm","numWinners","winners","setWinners","winnerIndex","addName","tableData","winnerIntro","winnersDisplay","w","deleteAllNames","data-bs-placement","title","style","display","f","files","reader","FileReader","onload","data","Uint8Array","result","workbook","XLSX","read","first_worksheet","Sheets","SheetNames","data2","utils","sheet_to_json","header","defval","row","r","slice","includes","undefined","readAsArrayBuffer","allWinners","randomNumArray","Uint32Array","window","crypto","getRandomValues","randomNum","indexOfWinner","Chance","integer","min","max","push","width","scope","Home","href","rel","WeatherDetail","details","main","wind","weather","sys","icon","temp","description","toUpperCase","Math","round","speed","Date","sunrise","toLocaleTimeString","sunset","myKey","Weather","setWeather","units","navigator","geolocation","getCurrentPosition","pos","crd","coords","fetch","latitude","longitude","then","json","weatherData","catch","console","error","err","code","message","enableHighAccuracy","timeout","maximumAge","zipChange","a","response","zipWeather","ok","Error","statusText","blur","placeholder","timer","setTimeout","clearInterval","PageNotFound","Loading","App","loading","errorDisplay","loadingDisplay","path","from","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dc4b13d3.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Navbar } from 'react-bootstrap';\r\n\r\nfunction Header() {\r\n  //expanded is a state to toggle the open & close the navbar in narrow screens\r\n  const [expanded, setExpanded] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <Navbar bg=\"light\" expand=\"lg\" expanded={expanded} className=\"header\">\r\n        <img className=\"App-logo\" src='8093f109675f4f7aac6b62f930ac0291 (6).png' alt='pic' />\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" onClick={() => setExpanded(expanded ? false : \"expanded\")} />\r\n        <Navbar.Collapse className=\"navbar-nav mr-auto navbar-collapse collapse\" id=\"basic-navbar-nav\">\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <NavLink to='/home' className='navbar-brand nav-link' data-bs-toggle=\"collapse\" data-bs-target=\".navbar-collapse.show\" onClick={() => setExpanded(false)}>Home</NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <NavLink to='/rafflePicker' className='navbar-brand nav-link' data-bs-toggle=\"collapse\" data-bs-target=\".navbar-collapse.show\" onClick={() => setExpanded(false)}>Raffles</NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <NavLink to='/weather' className='navbar-brand nav-link' data-bs-toggle=\"collapse\" data-bs-target=\".navbar-collapse.show\" onClick={() => setExpanded(false)}> Weather</NavLink>\r\n            </li>\r\n          </ul>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import { useState } from 'react'\r\n\r\n//A terrific custom hook by my instructor Mr.Stephen Lubowsky \r\n\r\nfunction useForm(initialFormValues) {\r\n    const [formValues, setFormValues] = useState(initialFormValues);\r\n\r\n    return [\r\n        formValues,\r\n        e => setFormValues({ ...formValues, [e.target.name]: e.target.value })\r\n    ]\r\n}\r\n\r\nexport default useForm\r\n","import './AddName.css';\r\nimport React from 'react';\r\nimport useForm from './useForm';\r\n\r\nfunction AddName({ displayForm, setContacts, contacts }) {\r\n\r\n    const [values, setValues] = useForm({ firstName: '', lastName: '', email: '' });\r\n\r\n    const addName = e => {\r\n        e.preventDefault();\r\n        const valueArray = Object.values(values);\r\n        if (contacts.length) {\r\n            setContacts([...contacts, valueArray]);\r\n        } else {\r\n            setContacts([valueArray])\r\n        }\r\n        displayForm(false);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className='fixed-top fixed-left fixed-bottom'>\r\n                <form className='container addName p-3' onSubmit={addName}>\r\n                    <div className=\"form-group row\">\r\n                        <label className=\"col-sm-2 col-form-label\">First Name</label>\r\n                        <div className=\"col-sm-10\">\r\n                            <input name=\"firstName\" className=\"form-control\" id=\"inputFirst\" value={values.firstName} onChange={setValues} required />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group row\">\r\n                        <label className=\"col-sm-2 col-form-label\">Last Name</label>\r\n                        <div className=\"col-sm-10\">\r\n                            <input name=\"lastName\" className=\"form-control\" id=\"inputLast\" value={values.lastName} onChange={setValues} required />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group row\">\r\n                        <label className=\"col-sm-2 col-form-label\">Email</label>\r\n                        <div className=\"col-sm-10\">\r\n                            <input type='email' name=\"email\" className=\"form-control\" id=\"inputEmail\" value={values.email} onChange={setValues} required />\r\n                        </div>\r\n                        <div className=\"col-sm-10 m-auto p-3\">\r\n                            <button type=\"submit\" className=\"btn btn-primary m-2\">Submit</button>\r\n                            <button className=\"btn btn-primary\" onClick={() => displayForm(false)}>Cancel</button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddName\r\n","import './Edit.css';\r\nimport React, { useRef } from 'react';\r\nimport useForm from './useForm';\r\n\r\nfunction Edit({ contact, displayEditMode, setContacts, allContacts }) {\r\n    //start with pulling the original data into an object with the appropriate name\r\n    const contactKeys = { firstName: '', lastName: '', email: '' };\r\n    let index = 0;\r\n    Object.keys(contactKeys).map(c => contactKeys[c] = contact[index++]);\r\n    //now we are set up to use controlled components\r\n    //we initiate the values with the contact original data\r\n    const [values, setValues] = useForm(contactKeys);\r\n    const setcontactsRef = useRef();\r\n\r\n    const submit = e => {\r\n        e.preventDefault();\r\n        //save the edited contact into the contacts list\r\n        setcontactsRef.current = allContacts.map(c => {\r\n            if (c === contact) {\r\n                //we get rid of the keys as the contacts are arrays not objects\r\n                return c = Object.values(values);\r\n            }\r\n            return c;\r\n        })\r\n        setContacts(setcontactsRef.current);\r\n\r\n        //show contacts in regular mode - not in edit mode\r\n        displayEditMode(false)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <tr>\r\n                <td colSpan='4'>\r\n                    <form onSubmit={submit}>\r\n                        <div className=\"form-row edit\">\r\n                            <div className=\"col\">\r\n                                <input name=\"firstName\" className=\"form-control\" id=\"inputFirst\" value={values.firstName} onChange={setValues} /></div>\r\n                            <div className=\"col\">\r\n                                <input name=\"lastName\" className=\"form-control\" id=\"inputLast\" value={values.lastName} onChange={setValues} />\r\n                            </div>\r\n                            <div className=\"col\">\r\n                                <input name=\"email\" className=\"form-control\" id=\"inputEmail\" value={values.email} onChange={setValues} />\r\n                            </div>\r\n                            <button className=\"btn btn-outline-primary mr-1 btn-sm\" type=\"submit\">Save</button>\r\n                            <button className=\"btn btn-outline-primary mr-1 btn-sm\" onClick={() => displayEditMode(false)}>Cancel</button>\r\n                        </div>\r\n                    </form>\r\n                    {/* disable other buttons */}\r\n                    <div className='fixed-top fixed-left fixed-bottom'>\r\n\r\n                    </div>\r\n                </td>\r\n            </tr>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Edit\r\n","import React from 'react';\r\n\r\nfunction IndividualContact({ contact, editButtons }) {\r\n    let indexCell = 0;\r\n    //populate each contact with its data\r\n    const populateCells = contact ? contact.map(c => <td key={indexCell++}> {c} </td>) : null;\r\n\r\n    return (\r\n        <>\r\n            <tr>\r\n                {populateCells}\r\n                {/* add the edit and delete buttons */}\r\n                {editButtons}\r\n            </tr>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default IndividualContact\r\n","import React, { useEffect, useRef, useState } from 'react'\r\nimport Edit from './Edit';\r\nimport IndividualContact from './IndividualContact';\r\n\r\nfunction Contacts({ contact, setContacts, allContacts, setLoading }) {\r\n    const [deleted, deleteContact] = useState(false);\r\n    const [inEditMode, editContact] = useState(false);\r\n    const [individualContact, setIndividualContact] = useState(contact);\r\n    const allcontactsRef = useRef();\r\n\r\n    useEffect(() => {\r\n        //set loading to false once names are being added to table\r\n        setLoading(false);\r\n        if (deleted) {\r\n            //set individual contact to null\r\n            setIndividualContact();\r\n            deleteContact(false);\r\n            //useRef to adjust contacts and erase the deleted contact from the contacts as well in 2 steps\r\n            allcontactsRef.current = allContacts.filter(c => c !== individualContact);\r\n            setContacts(allcontactsRef.current);\r\n        } else {\r\n            setIndividualContact(contact)\r\n        }\r\n\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [deleted, allcontactsRef, setContacts, contact])\r\n\r\n    //make edit and delete buttons for every contact\r\n    const editRow = individualContact && !inEditMode ? <td ><button className=\"btn btn-outline-primary mr-1 btn-sm\" onClick={() => editContact(true)}>Edit</button><button className=\"btn btn-outline-primary mr-1 btn-sm\" onClick={() => deleteContact(true)}>Delete</button></td> : null;\r\n\r\n    //if edit is clicked open edit component otherwise open individualcontact component\r\n    const populateCells = contact && !inEditMode ? <IndividualContact contact={individualContact} editButtons={editRow} /> : contact && inEditMode ? <Edit contact={individualContact} displayEditMode={editContact} setContacts={setContacts} allContacts={allContacts} /> : null;\r\n    return (\r\n        <>\r\n            {populateCells}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Contacts\r\n","import React from 'react'\r\n\r\nfunction Winners({ winner }) {\r\n    const [first, last, email] = winner;\r\n    return (\r\n        <>\r\n            <div>\r\n                <h3> {first} {last} {email}</h3>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Winners","import './Raffles.css';\r\nimport React, { useState } from 'react';\r\nimport XLSX from 'xlsx';\r\nimport Chance from 'chance';\r\n\r\nimport AddName from './AddName';\r\nimport Contacts from './Contacts';\r\nimport useForm from './useForm';\r\nimport Winners from './Winners';\r\n\r\nconst Raffles = ({ contacts, setContacts, setError, setLoading }) => {\r\n    const [displayAddNameForm, setDisplayAddNameForm] = useState(false);\r\n    const [values, setValues] = useForm({ numWinners: 0 });\r\n    const [winners, setWinners] = useState([]);\r\n\r\n    let index = 0;\r\n    let winnerIndex = 0;\r\n\r\n    const pickwinner = e => {\r\n        e.preventDefault();\r\n        //creating array to add the winners to before all winners are chosen\r\n        let allWinners = [];\r\n        //I have found Math.random to be predictable, I therefore used Uint32Array instead \r\n\r\n        //Making an array of random numbers with a size of the requested number of winners\r\n        let randomNumArray = new Uint32Array(values.numWinners);\r\n        window.crypto.getRandomValues(randomNumArray);\r\n        //going through the above random number array and thereby choosing a winner using Chance library\r\n        for (let index = 0; index < values.numWinners; index++) {\r\n            const randomNum = randomNumArray[index];\r\n            const indexOfWinner = new Chance(randomNum).integer({ min: 0, max: contacts.length - 1 });\r\n            //adding winner to array; if winner is already in array choose another random number array and start again from the previous index which failed to find a new winner\r\n            if (!allWinners.includes(contacts[indexOfWinner])) {\r\n                allWinners.push(contacts[indexOfWinner]);\r\n            } else {\r\n                randomNumArray = new Uint32Array(values.numWinners);\r\n                window.crypto.getRandomValues(randomNumArray);\r\n                --index;\r\n            }\r\n        }\r\n        //setting the winners array as the state\r\n        setWinners([...allWinners])\r\n    }\r\n\r\n    const excelContacts = e => {\r\n        //set loading as true to enable the loading component until the file is finished loading\r\n        setLoading(true);\r\n        var files = e.target.files, f = files[0];\r\n        var reader = new FileReader();\r\n        reader.onload = e => {\r\n            var data = new Uint8Array(e.target.result);\r\n            var workbook = XLSX.read(data, { type: 'array' });\r\n            var first_worksheet = workbook.Sheets[workbook.SheetNames[0]];\r\n            var data2 = XLSX.utils.sheet_to_json(first_worksheet, { header: 1, defval: '' }).map(row => {\r\n                //chopping fourth columns and on if present\r\n                let r = row.slice(0, 3);\r\n                //validating data; all columns are strings not numbers or empty & that third column includes @ for email\r\n                if (typeof r[0] !== 'string' || typeof r[1] !== 'string' || typeof r[2] !== 'string' || r.includes('') || !r[2].includes('@')) {\r\n                    r = undefined;\r\n                    //setting loading to false so that error is clickable\r\n                    setLoading(false);\r\n                    //showing error to user\r\n                    setError('The excel file provided contains data that does not match the requirements.')\r\n                }\r\n                return r;\r\n            });\r\n            //cutting out invalid data\r\n            data2 = data2.filter(row => row !== undefined);\r\n            //if there are already names in array add the names from excel file to them otherwise make these names the contacts\r\n            if (contacts.length) {\r\n                setContacts([...contacts, ...data2]);\r\n            } else {\r\n                setContacts(data2);\r\n            }\r\n        };\r\n        reader.readAsArrayBuffer(f);\r\n    };\r\n\r\n    //button to get to the form to add a name; if clicked - hide button & show form\r\n    const addName = displayAddNameForm ? <AddName displayForm={setDisplayAddNameForm} setContacts={setContacts} contacts={contacts} /> : <button className=\"btn btn-outline-primary m-2\" onClick={() => setDisplayAddNameForm(true)}>Add Name</button>;\r\n\r\n    //if there are names in contacts populate table; otherwise show 'No names to show'\r\n    const tableData = contacts.length ? contacts.map((c) => <Contacts key={index++} setLoading={setLoading} contact={c} setContacts={setContacts} index={index} allContacts={contacts} />) : <tr>\r\n        <td colSpan='4'>No Names to Display</td>\r\n    </tr>;\r\n\r\n    const winnerIntro = winners.length > 1 ? <h3>And the winners are...</h3> : winners.length === 1 ? <h3>And the winner is...</h3> : null;\r\n\r\n    //if there are winners show winners\r\n    const winnersDisplay = winners.length ? winners.map(w => <Winners key={winnerIndex++} winner={w} />) : null;\r\n\r\n    //make it easy to delete contacts with a button if there are at least two contacts\r\n    const deleteAllNames = contacts.length > 1 ? <button className='btn btn-outline-primary m-2' onClick={() => setContacts([])}>Delete All Names</button> : null;\r\n\r\n    return (\r\n        <>\r\n            <div className='container p-2'>\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-5\">\r\n                        {/* hide default file input display and show bootstrap button instead */}\r\n                        <label className=\"btn btn-outline-primary m-2\" data-bs-toggle=\"tooltip\" data-bs-placement=\"bottom\" title=\"It is imperative that the excel file follows the format used in the table: First name, last name & email.\"\r\n                        >\r\n                            Import Names from Excel File\r\n                            <input name=\"fileinput\" type='file' style={{ display: 'none' }} onChange={excelContacts}\r\n                                // enable file input more than once\r\n                                onClick={e => e.target.value = null} />\r\n                        </label>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        {addName}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <form className=\"p-2\" onSubmit={pickwinner}>\r\n                <label>\r\n                    How Many Winners: &nbsp;\r\n                    <input style={{ width: '4em' }} name=\"numWinners\" type=\"number\" min={contacts.length ? '1' : '0'} max={contacts.length} value={values.numWinners} onChange={setValues} />\r\n                </label>\r\n                <button className=\"btn-outline-primary\" type=\"submit\">Pick Winners</button>\r\n            </form>\r\n\r\n            <div className=\"winners\">\r\n                {winnerIntro}\r\n                {winnersDisplay}\r\n            </div>\r\n\r\n            <table className=\"table table-sm table-bordered m-auto pb-xs-5\" id='nameTable'>\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">First</th>\r\n                        <th scope=\"col\">Last</th>\r\n                        <th scope=\"col\">Email</th>\r\n                        <th scope=\"col\">Edit</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {tableData}\r\n                </tbody>\r\n            </table>\r\n            {deleteAllNames}\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Raffles;\r\n","import './Home.css';\r\nimport React from 'react';\r\n\r\nfunction Home() {\r\n    return (\r\n        <>\r\n            <div className='m-3'>\r\n                <div className='float-left'>\r\n                    <figure>\r\n                        <img className='rounded img-thumbnail img-fluid mr-3' src='../IMG_953_ws.JPG' alt='pic' />\r\n                        <figcaption className='p-2 cap'>Tzvi Tenenbaum</figcaption>\r\n                    </figure>\r\n                </div>\r\n                <p className=' aboutMe'>\r\n                    I finished an extensive 18 month course in software development/ web development in <a href=\"https://www.linkedin.com/school/theschoolofevolvingtechnologies/about/\" target=\"_blank\" rel=\"noopener noreferrer\"> The School of Evolving Technologies </a>(2019-2021). I thrive having a challenge to tackle and I especially enjoy working in a group.  I have my certificate in software development/ web development from The School of Evolving Technologies.\r\n                </p>\r\n\r\n                <div>You can reach me either through LinkedIn <a href='https://www.linkedin.com/in/tzvi-tenenbaum-8793a21b2/' target=\"_blank\" rel=\"noopener noreferrer\">here</a>.\r\n                Or you can email me at <a href='https://mail.google.com/mail/?view=cm&fs=1&to=tenenbaumtzvi@gmail.com' target=\"_blank\" rel=\"noopener noreferrer\">tenenbaumtzvi@gmail.com</a>.</div>\r\n                <div className='m-3'>\r\n                    <img className='App-logo' src='../8093f109675f4f7aac6b62f930ac0291 (5).png' alt='pic' />\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react';\r\n\r\nfunction WeatherDetail({ details: { name, main, wind, weather, sys } }) {\r\n    return (\r\n        <div className='container-fluid weather'>\r\n            <h2>The weather for {name}:</h2>\r\n            <div>\r\n                <img src={`http://openweathermap.org/img/wn/${weather[0].icon}.png`} alt={main.temp} />\r\n                <h2>{weather[0].description.toUpperCase()}</h2>\r\n            </div>\r\n            <h3>{Math.round(main.temp)} Degrees</h3>\r\n            <h4>\r\n                Wind is felt at {Math.round(wind.speed)}\r\n                <a href='https://en.wikipedia.org/wiki/Miles_per_hour' target=\"_blank\" rel=\"noopener noreferrer\"> mph</a>\r\n            </h4>\r\n            <br></br>\r\n            <div id='sun'>\r\n                <img src={'img/sun.jpg'} alt={'Sun'} />\r\n            </div>\r\n            <h6 className='m-3'>\r\n                Sunrise today: {new Date(sys.sunrise * 1000).toLocaleTimeString()}\r\n            </h6>\r\n            <h6>\r\n                Sunset today: {new Date(sys.sunset * 1000).toLocaleTimeString()}\r\n            </h6>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WeatherDetail;\r\n","export  const myKey = '55694679cf2f7ba7608df3b8893d9f0a';\r\n","import React, { useEffect, useState } from 'react';\r\nimport WeatherDetail from './WeatherDetail';\r\nimport './Weather.css';\r\nimport { myKey } from './myKey';\r\n\r\nfunction Weather({ setError, setLoading }) {\r\n    const [weather, setWeather] = useState();\r\n\r\n    const units = 'imperial';\r\n\r\n    useEffect(() => {\r\n\r\n        let options = {\r\n            enableHighAccuracy: true,\r\n            timeout: 5000,\r\n            maximumAge: 0\r\n        };\r\n\r\n        const success = (pos) => {\r\n            const crd = pos.coords;\r\n\r\n            fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${crd.latitude}&lon=${crd.longitude}&appid=${myKey}&units=${units}`)\r\n                .then(r => r.json())\r\n                .then(weatherData => {\r\n                    setWeather(weatherData)\r\n                })\r\n                .catch(e => console.error(e));\r\n\r\n        }\r\n\r\n        const error = (err) => {\r\n            setError(`ERROR(${err.code}): ${err.message}`);\r\n        }\r\n\r\n\r\n        navigator.geolocation.getCurrentPosition(success, error, options)\r\n\r\n    }, [setError]);\r\n\r\n    const zipChange = async e => {\r\n        e.preventDefault();\r\n        if (e.target.value.length === 5) {\r\n            try {\r\n                const response = await fetch(`http://api.openweathermap.org/data/2.5/weather?appid=${myKey}&zip=${e.target.value}&units=${units}`);\r\n                const zipWeather = await response.json();\r\n                if (!response.ok) {\r\n                    throw new Error(zipWeather.message || response.statusText)\r\n                }\r\n                setWeather(zipWeather);\r\n            } catch (error) {\r\n                setError(`ERROR : ${error.message}`);\r\n            }\r\n            finally {\r\n                e.target.value = '';\r\n                e.target.blur();\r\n            }\r\n        }\r\n    }\r\n\r\n    if (weather) {\r\n        setLoading(false);\r\n    }\r\n\r\n    const display = weather ? <WeatherDetail details={weather} /> : setLoading(true);\r\n\r\n    return (\r\n        <>\r\n            <div className='weather'>\r\n                <input type='number' name='zip' placeholder='Enter Zip' onChange={zipChange} />\r\n                <div>\r\n                    {display}\r\n                </div>\r\n            </div>\r\n            {/*Credit given to openweatherapi for all weather reports*/}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Weather\r\n","import './ErrorComponent.css'\r\nimport React, { useEffect } from 'react';\r\n\r\nfunction Error({ error, setError }) {\r\n    useEffect(() => {\r\n        const timer = setTimeout(() => setError(null), 5000)\r\n        return () => clearInterval(timer);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [error])\r\n\r\n    return (\r\n        <>\r\n            <div className='fixed-top fixed-left fixed-bottom p-5 background-error'>\r\n\r\n                <div className='err'>\r\n                    <h1 className='text-danger p-3'>\r\n                        {error.toUpperCase()}\r\n                    </h1>\r\n                    <button onClick={() => setError(null)}>OK</button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Error\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction PageNotFound() {\r\n    return (\r\n        <>\r\n            <div className='text-danger p-5'>\r\n                <h2>404...Page not found</h2>\r\n            </div>\r\n            <Link to='home'><h3>Home</h3></Link>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PageNotFound\r\n","import './Loading.css';\r\nimport React from 'react';\r\n\r\nfunction Loading() {\r\n\r\n    return (\r\n        <div className='loading fixed-top fixed-left fixed-bottom mx-auto position-absolute m-5'>\r\n            <div> Loading...</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loading\r\n","import './App.css';\n\nimport { useState } from 'react';\nimport { Redirect, Switch, Route } from 'react-router-dom';\n\nimport Header from './Header';\nimport Raffles from './Raffles';\nimport Home from './Home';\nimport Weather from './Weather';\nimport ErrorComponent from './ErrorComponent';\nimport PageNotFound from './PageNotFound';\nimport Loading from './Loading';\n\nfunction App() {\n  const [contacts, setContacts] = useState([]);\n  const [error, setError] = useState();\n  const [loading, setLoading] = useState(false);\n\n  const errorDisplay = error ? <ErrorComponent error={error} setError={setError} /> : null;\n  const loadingDisplay = loading ? <Loading /> : null;\n\n  return (\n    <div className='text-center h-100 w-100'>\n      <Header />\n      {errorDisplay}\n\n      {loadingDisplay}\n      <Switch>\n        <Route path='/home'>\n          <Home />\n        </Route>\n        <Route path='/weather'>\n          <Weather setError={setError} setLoading={setLoading} />\n        </Route>\n        <Route path='/rafflePicker'>\n          <Raffles contacts={contacts} setContacts={setContacts} setError={setError} setLoading={setLoading} />\n        </Route>\n\n        <Redirect from='/' to='/home' exact />\n        <Route>\n          <PageNotFound />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}